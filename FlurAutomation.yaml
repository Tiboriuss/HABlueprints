blueprint:
  name: Binary Sensor to Light/Relay Controller
  description: Turns on a light or relay when a binary sensor changes state v1
  domain: automation
  input:
    binary_sensor:
      name: Binary Sensor
      description: The binary sensor that will trigger the automation
      selector:
        entity:
          domain: binary_sensor
    target_device:
      name: Target Light or Relay
      description: The light or relay to control
      selector:
        entity:
          domain:
            - light
            - switch
    turn_on_state:
      name: Turn On When
      description: The state of the binary sensor that should trigger turning on the device
      default: "on"
      selector:
        select:
          options:
            - "on"
            - "off"

trigger:
  - platform: state
    entity_id: !input binary_sensor
    to: !input turn_on_state
  - platform: state
    entity_id: !input binary_sensor
    to: >-
      {% if input.turn_on_state == 'on' %}
        off
      {% else %}
        on
      {% endif %}

condition: []

action:
  - choose:
      - conditions:
          - condition: template
            value_template: "{{ trigger.to_state.state == input.turn_on_state }}"
        sequence:
          - service: >-
              {% if device_attr('!input target_device', 'domain') == 'light' %}
                light.turn_on
              {% else %}
                switch.turn_on
              {% endif %}
            target:
              entity_id: !input target_device
      - conditions:
          - condition: template
            value_template: "{{ trigger.to_state.state != input.turn_on_state }}"
        sequence:
          - service: >-
              {% if device_attr('!input target_device', 'domain') == 'light' %}
                light.turn_off
              {% else %}
                switch.turn_off
              {% endif %}
            target:
              entity_id: !input target_device
